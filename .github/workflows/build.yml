name: Build

on:
  push:
    branches:
      - main
    paths:
      - src/*/*.cs
      - src/*/*.csproj
      - src/*/package.nix
      - src/*/deps.json
      - src/*/Dockerfile
      - default.nix
      - lon.nix
      - lon.lock
      - .github/workflows/build.yml
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - uses: actions/checkout@v5

      - name: Install Lix
        uses: samueldr/lix-gha-installer-action@v2025-02-26.prerelease

      - name: Install Cachix
        uses: cachix/cachix-action@v16
        with:
          name: drakon64
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build
        run: cachix watch-exec drakon64 -- nix-build -A processor.docker -A receiver.docker

      - name: Create Cachix pins
        run: |
          cachix pin drakon64 amaurot-processor "$(nix eval --expr '(import ./. {}).processor' --raw --impure)" --keep-revisions 1
          cachix pin drakon64 amaurot-processor-docker "$(nix eval --expr '(import ./. {}).processor.docker {}' --raw --impure)" --keep-revisions 1
          cachix pin drakon64 amaurot-receiver "$(nix eval --expr '(import ./. {}).receiver' --raw --impure)" --keep-revisions 1
          cachix pin drakon64 amaurot-receiver-docker "$(nix eval --expr '(import ./. {}).receiver.docker' --raw --impure)" --keep-revisions 1

      - run: |
          docker load < result
          docker load < result-2

      - uses: docker/metadata-action@v5
        id: processor-meta
        with:
          images: ghcr.io/${{ github.repository }}-processor
          tags: latest
          
      - uses: docker/metadata-action@v5
        id: receiver-meta
        with:
          images: ghcr.io/${{ github.repository }}-receiver
          tags: latest

      - name: Login to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Processor to GitHub Packages
        uses: docker/build-push-action@v6
        with:
          context: ./src/Processor
          push: true
          tags: ${{ steps.processor-meta.outputs.tags }}
        env:
          SOURCE_DATE_EPOCH: 0

      - name: Upload Receiver to GitHub Packages
        uses: docker/build-push-action@v6
        with:
          context: ./src/Receiver
          push: true
          tags: ${{ steps.receiver-meta.outputs.tags }}
        env:
          SOURCE_DATE_EPOCH: 0

#      - name: Build Nix shell
#        run: nix-shell -A opentofu --run "exit"

#      - uses: google-github-actions/auth@v3
#        with:
#          project_id: ${{ secrets.GCP_PROJECT }}
#          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

#      - name: Deploy to Cloud Run
#        run: |
#          echo "$TERRAFORM_TFVARS" | base64 -d > terraform.tfvars
#          nix-shell -A opentofu ../shell.nix --run "tofu init"
#          nix-shell -A opentofu ../shell.nix --run "tofu apply -auto-approve -target module.amaurot.google_cloud_run_v2_service.processor -target module.amaurot.google_cloud_run_v2_service.receiver"
#        working-directory: tofu
#        env:
#          TERRAFORM_TFVARS: ${{ secrets.TERRAFORM_TFVARS }}
